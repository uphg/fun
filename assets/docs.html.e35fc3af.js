import{_ as l,r as o,o as u,c as i,a as n,b as a,w as p,F as r,d as s,e}from"./app.3ff475ee.js";const k={},d=n("h1",{id:"api-\u6587\u6863",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#api-\u6587\u6863","aria-hidden":"true"},"#"),s(" API \u6587\u6863")],-1),h=n("h2",{id:"\u5408\u96C6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5408\u96C6","aria-hidden":"true"},"#"),s(" \u5408\u96C6")],-1),_={id:"each",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#each","aria-hidden":"true"},"#",-1),g=s(),f=s("each"),b=e(`<p>\u8FED\u4EE3\u6307\u5B9A\u6570\u7EC4/\u7C7B\u6570\u7EC4\u3001\u5BF9\u8C61\uFF0C\u5E76\u4E3A\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528 callback\uFF0Ccallback \u4F20\u5165\u4E09\u4E2A\u53C2\u6570 (currentValue, index, obj)\u3002\u4F7F\u7528\u5BF9\u8C61\u65F6\u6839\u636E\u5BF9\u8C61\u7684\u6BCF\u4E2A key \u4F9D\u6B21\u8C03\u7528</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 1, 2, 3</span>

<span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;</span>
</code></pre></div>`,2),v={id:"map",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#map","aria-hidden":"true"},"#",-1),x=s(),j=s("map"),w=e(`<p>\u8FED\u4EE3\u6307\u5B9A\u6570\u7EC4/\u7C7B\u6570\u7EC4/\u5BF9\u8C61\uFF0C\u5E76\u6839\u636E callback \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\u8FD4\u56DE</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> number <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [2, 4, 6]</span>

<span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [3, 6, 9]</span>
</code></pre></div>`,2),N={id:"clonedeep",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#clonedeep","aria-hidden":"true"},"#",-1),A=s(),L=s("cloneDeep"),O=e(`<p>\u5BF9\u6307\u5B9A\u503C\u8FDB\u884C\u6DF1\u5EA6\u514B\u9686</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> object2 <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> object<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),E={id:"values",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#values","aria-hidden":"true"},"#",-1),S=s(),M=s("values"),B=e(`<p>\u8FD4\u56DE\u5BF9\u8C61\u6240\u6709 value \u7EC4\u6210\u7684\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
<span class="token class-name">Func</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">values</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&#39;a&#39;, &#39;b&#39;]</span>

<span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3]</span>

<span class="token function">values</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&#39;h&#39;, &#39;i&#39;]</span>
</code></pre></div>`,2),q={id:"has",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#has","aria-hidden":"true"},"#",-1),W=s(),V=s("has"),C=e(`<p>\u5224\u65AD\u5BF9\u8C61\u7684\u6307\u5B9A\u5C5E\u6027\u662F\u5426\u4E3A\u81EA\u8EAB\u5C5E\u6027</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>

<span class="token function">has</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">has</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&#39;toString&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),P={id:"hasin",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#hasin","aria-hidden":"true"},"#",-1),T=s(),U=s("hasIn"),J=e(`<p>\u5224\u65AD\u5BF9\u8C61\u7684\u6307\u5B9A\u5C5E\u6027\u662F\u5426\u4E3A\u81EA\u8EAB\u6216\u539F\u578B\u7684\u5C5E\u6027</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>

<span class="token function">has</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">has</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&#39;toString&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>
</code></pre></div>`,2),z={id:"pick",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#pick","aria-hidden":"true"},"#",-1),X=s(),H=s("pick"),K=e(`<p>\u8FD4\u56DE\u4E00\u4E2A\u7531 keys \u5217\u8868\u6307\u5B9A\u7684 key \u7684\u503C\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token function">pick</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; { a: &#39;1&#39;, c: 3 }</span>
</code></pre></div>`,2),Q={id:"pickby",tabindex:"-1"},Y=n("a",{class:"header-anchor",href:"#pickby","aria-hidden":"true"},"#",-1),Z=s(),$=s("pickBy"),nn=e(`<p>\u8FD4\u56DE\u4E00\u4E2A callback return \u503C\u4E3A ture \u7EC4\u6210\u7684\u5BF9\u8C61\uFF0Ccallback \u6BCF\u6B21\u8C03\u7528\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\uFF1Avalue\uFF0Ckey</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token function">pickBy</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> isNumber<span class="token punctuation">)</span>
<span class="token comment">// =&gt; { b: 2, c: 3 }</span>
</code></pre></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2>`,3),sn={id:"chunk",tabindex:"-1"},an=n("a",{class:"header-anchor",href:"#chunk","aria-hidden":"true"},"#",-1),tn=s(),pn=s("chunk"),en=e(`<p>\u4EE5\u6307\u5B9A\u5927\u5C0F\u5206\u5272\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>

<span class="token function">chunk</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [[&#39;a&#39;, &#39;b&#39;], [&#39;c&#39;, &#39;d&#39;]]</span>
 
<span class="token function">chunk</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], [&#39;d&#39;]]</span>
</code></pre></div>`,2),on={id:"compact",tabindex:"-1"},cn=n("a",{class:"header-anchor",href:"#compact","aria-hidden":"true"},"#",-1),ln=s(),un=s("compact"),rn=e(`<p>\u521B\u5EFA\u4E00\u4E2A\u6E05\u9664\u6240\u6709 falsey \u503C\u7684\u6570\u7EC4\uFF0Cfalsey \u503C\u5305\u62EC <code>false</code>\u3001<code>null</code>\u3001<code>0</code>\u3001<code>&quot;&quot;</code>\u3001<code>undefined</code> \u548C <code>NaN</code></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3, 4]</span>
</code></pre></div>`,2),kn={id:"flatmap",tabindex:"-1"},dn=n("a",{class:"header-anchor",href:"#flatmap","aria-hidden":"true"},"#",-1),hn=s(),_n=s("flatMap"),mn=e(`<p>\u901A\u8FC7\u8C03\u7528 callback \u51FD\u6570\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u6241\u5E73\u5316\u7684\u6570\u7EC4\uFF0Ccallback \u5305\u62EC\u4E09\u4E2A\u53C2\u6570 (value, index|key, array)</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>item<span class="token punctuation">,</span> item<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 1, 2, 2, 3, 3]</span>
</code></pre></div>`,2),gn={id:"flatmapdeep",tabindex:"-1"},fn=n("a",{class:"header-anchor",href:"#flatmapdeep","aria-hidden":"true"},"#",-1),bn=s(),vn=s("flatMapDeep"),yn=e(`<p>\u8BE5\u65B9\u6CD5\u4E0E flatMap \u7C7B\u4F3C\uFF0C\u4E0D\u540C\u7684\u5730\u65B9\u662F\u5B83\u4F1A\u9012\u5F52\u7684\u5C55\u5F00\u6240\u6709\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">flatMapDeep</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>item<span class="token punctuation">,</span> item<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 1, 2, 2, 3, 3]</span>
</code></pre></div>`,2),xn={id:"flatten",tabindex:"-1"},jn=n("a",{class:"header-anchor",href:"#flatten","aria-hidden":"true"},"#",-1),wn=s(),Nn=s("flatten"),In=e(`<p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6241\u5E73\u5316\u7684\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">flatten</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3, 4, 5, [6, 7]]</span>
</code></pre></div>`,2),An={id:"flattendeep",tabindex:"-1"},Ln=n("a",{class:"header-anchor",href:"#flattendeep","aria-hidden":"true"},"#",-1),On=s(),En=s("flattenDeep"),Fn=e(`<p>\u8BE5\u65B9\u6CD5\u4E0E flatten \u7C7B\u4F3C\uFF0C\u4E0D\u540C\u7684\u5730\u65B9\u662F\u5B83\u4F1A\u9012\u5F52\u7684\u5C55\u5F00\u6240\u6709\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">flattenDeep</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3, 4, 5, 6, 7]</span>
</code></pre></div>`,2),Sn={id:"uniq",tabindex:"-1"},Mn=n("a",{class:"header-anchor",href:"#uniq","aria-hidden":"true"},"#",-1),Bn=s(),qn=s("uniq"),Dn=e(`<p>\u6570\u7EC4\u53BB\u91CD\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6CA1\u6709\u91CD\u590D\u503C\u7684\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">uniq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [2, 3, 1]</span>

<span class="token function">uniq</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [-Infinity, -0, NaN, undefined, 1]</span>
</code></pre></div>`,2),Wn={id:"find",tabindex:"-1"},Vn=n("a",{class:"header-anchor",href:"#find","aria-hidden":"true"},"#",-1),Cn=s(),Pn=s("find"),Rn=e(`<p>\u8FED\u4EE3\u6307\u5B9A\u6570\u7EC4\uFF0C\u8FD4\u56DE callback \u51FD\u6570\u4E3A true \u7684\u7B2C\u4E00\u9879\u7684\u503C</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Church&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Turing&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Neumann&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token function">find</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; { id: 2, age: 20, name: &#39;Church&#39; }</span>
</code></pre></div>`,2),Tn={id:"findindex",tabindex:"-1"},Un=n("a",{class:"header-anchor",href:"#findindex","aria-hidden":"true"},"#",-1),Jn=s(),zn=s("findIndex"),Gn=e(`<p>\u8FED\u4EE3\u6307\u5B9A\u6570\u7EC4\uFF0C\u8FD4\u56DE callback \u51FD\u6570\u4E3A true \u7684\u7B2C\u4E00\u9879\u7684 index</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Church&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Turing&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Neumann&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token function">findIndex</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 1</span>
</code></pre></div>`,2),Xn={id:"findlast",tabindex:"-1"},Hn=n("a",{class:"header-anchor",href:"#findlast","aria-hidden":"true"},"#",-1),Kn=s(),Qn=s("findLast"),Yn=e(`<p>\u6B64\u65B9\u6CD5\u4E0E find \u76F8\u4F3C\uFF0C\u53EA\u4E0D\u8FC7\u662F\u4ECE\u53F3\u5411\u5DE6\u8FED\u4EE3\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Church&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Turing&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Neumann&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token function">findLast</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; { id: 3, age: 22, name: &#39;Turing&#39; }</span>
</code></pre></div>`,2),Zn={id:"findlastindex",tabindex:"-1"},$n=n("a",{class:"header-anchor",href:"#findlastindex","aria-hidden":"true"},"#",-1),ns=s(),ss=s("findLastIndex"),as=e(`<p>\u6B64\u65B9\u6CD5\u4E0E findIndex \u76F8\u4F3C\uFF0C\u53EA\u4E0D\u8FC7\u540C\u6837\u662F\u4ECE\u53F3\u5411\u5DE6\u8FED\u4EE3\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>

<span class="token function">findLastIndex</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 4</span>

<span class="token function">findLastIndex</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 2</span>
</code></pre></div>`,2),ts={id:"indexof",tabindex:"-1"},ps=n("a",{class:"header-anchor",href:"#indexof","aria-hidden":"true"},"#",-1),es=s(),os=s("indexOf"),cs=e(`<p>\u8FD4\u56DE\u5728\u6570\u7EC4\u4E2D\u53EF\u4EE5\u627E\u5230\u4E00\u4E2A\u7ED9\u5B9A\u5143\u7D20\u7684\u7B2C\u4E00\u4E2A\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE -1\u3002\u53EF\u6307\u5B9A fromIndex\uFF0C\u8868\u793A\u4ECE\u6307\u5B9A\u7D22\u5F15\u67E5\u8BE2</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span>

<span class="token function">indexOf</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 1</span>

<span class="token function">indexOf</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 3</span>
</code></pre></div>`,2),ls={id:"lastindexof",tabindex:"-1"},us=n("a",{class:"header-anchor",href:"#lastindexof","aria-hidden":"true"},"#",-1),is=s(),rs=s("lastIndexOf"),ks=e(`<p>\u8FD4\u56DE\u5728\u6570\u7EC4\u4E2D\u53EF\u4EE5\u627E\u5230\u4E00\u4E2A\u7ED9\u5B9A\u5143\u7D20\u7684\u6700\u540E\u4E00\u4E2A\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE -1\u3002\u53EF\u6307\u5B9A fromIndex\uFF0C\u8868\u793A\u4ECE\u6307\u5B9A\u7D22\u5F15\u67E5\u8BE2</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span>

<span class="token function">lastIndexOf</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 3</span>

<span class="token function">lastIndexOf</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 0</span>
</code></pre></div>`,2),ds={id:"remain",tabindex:"-1"},hs=n("a",{class:"header-anchor",href:"#remain","aria-hidden":"true"},"#",-1),_s=s(),ms=s("remain"),gs=e(`<p>\u6839\u636E\u7ED9\u5B9A\u53C2\u6570\u5206\u5272\u6570\u7EC4\uFF0C\u8FD4\u56DE\u5206\u5272\u540E\u7684\u5269\u4E0B\u7684\u90E8\u5206</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token function">remain</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 5]</span>

<span class="token function">remain</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3]</span>
</code></pre></div>`,2),fs={id:"tail",tabindex:"-1"},bs=n("a",{class:"header-anchor",href:"#tail","aria-hidden":"true"},"#",-1),vs=s(),ys=s("tail"),xs=e(`<p>\u83B7\u53D6\u9664\u4E86\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u5916\u7684\u6240\u6709\u5143\u7D20</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">tail</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [2, 3]</span>
</code></pre></div><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2>`,3),js={id:"debounce",tabindex:"-1"},ws=n("a",{class:"header-anchor",href:"#debounce","aria-hidden":"true"},"#",-1),Ns=s(),Is=s("debounce"),As=e(`<p>\u521B\u5EFA\u4E00\u4E2A\u9632\u6296\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u5728\u6307\u5B9A\u65F6\u95F4\u540E\u8C03\u7528\uFF0C\u5982\u679C\u4E2D\u9014\u8C03\u7528\uFF0C\u5219\u4F1A\u91CD\u65B0\u8BA1\u65F6\u3002\u53EF\u901A\u8FC7\u6307\u5B9A immediate \u8BBE\u7F6E\u662F\u5426\u5728\u7B2C\u4E00\u6B21\u8C03\u7528\u65F6\u7ACB\u5373\u8C03\u7528\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// 1 \u79D2\u540E\u8C03\u7528</span>
<span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">// \u7ACB\u5373\u8C03\u7528\u4E00\u6B21</span>
<span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">// \u6E05\u7A7A\u672A\u8C03\u7528\u5B9A\u65F6\u5668\uFF0C\u5185\u7F6E</span>
fn<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,2),Ls={id:"throttle",tabindex:"-1"},Os=n("a",{class:"header-anchor",href:"#throttle","aria-hidden":"true"},"#",-1),Es=s(),Fs=s("throttle"),Ss=e(`<p>\u521B\u5EFA\u4E00\u4E2A\u8282\u6D41\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u95F4\u9694\u7684\u6307\u5B9A\u65F6\u95F4\u5185\u8C03\u7528\u3002\u53EF\u901A\u8FC7\u6307\u5B9A leading\u3001trailing \u8BBE\u7F6E\u662F\u5426\u7B2C\u4E00\u6B21\u8C03\u7528\u548C\u6700\u540E\u4E00\u6B21\u5EF6\u8FDF\u8C03\u7528\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u95F4\u9694 1 \u79D2\u8C03\u7528\u4E00\u6B21</span>
<span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">// \u95F4\u9694 1 \u79D2\u8C03\u7528\u4E00\u6B21\uFF0C\u5E76\u4E14\u7B2C\u4E00\u6B21\u8C03\u7528\u4F1A\u5728\u4E00\u79D2\u540E</span>
<span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">leading</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u95F4\u9694 1 \u79D2\u8C03\u7528\u4E00\u6B21\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u5B58\u5728\u6700\u540E\u4E00\u6B21\u5EF6\u65F6\u8C03\u7528</span>
<span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">trailing</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,2),Ms={id:"delay",tabindex:"-1"},Bs=n("a",{class:"header-anchor",href:"#delay","aria-hidden":"true"},"#",-1),qs=s(),Ds=s("delay"),Ws=e(`<p>\u7B49\u5F85\u6307\u5B9A\u65F6\u95F4\u540E\u8C03\u7528\u51FD\u6570\uFF0C\u53EF\u4F20\u5165\u591A\u4E2A\u53C2\u6570</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p1<span class="token punctuation">,</span> p2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// after 1 second:</span>
<span class="token comment">// hello hi</span>
</code></pre></div><h2 id="\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B" aria-hidden="true">#</a> \u7C7B\u578B</h2>`,3),Vs={id:"eq",tabindex:"-1"},Cs=n("a",{class:"header-anchor",href:"#eq","aria-hidden":"true"},"#",-1),Ps=s(),Rs=s("eq"),Ts=s("\u5224\u65AD\u4E24\u4E2A\u503C\u662F\u5426\u4E3A"),Us={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_eqness",target:"_blank",rel:"noopener noreferrer"},Js=s("\u540C\u4E00\u4E2A\u503C"),zs=e(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">eq</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">eq</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,1),Gs={id:"tofinite",tabindex:"-1"},Xs=n("a",{class:"header-anchor",href:"#tofinite","aria-hidden":"true"},"#",-1),Hs=s(),Ks=s("toFinite"),Qs=e(`<p>value \u8F6C\u6709\u9650\u6570\u5B57</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">toFinite</span><span class="token punctuation">(</span><span class="token number">6.2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6.2</span>
 
<span class="token function">toFinite</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 5e-324</span>
 
<span class="token function">toFinite</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 1.7976931348623157e+308</span>
 
<span class="token function">toFinite</span><span class="token punctuation">(</span><span class="token string">&#39;6.2&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6.2</span>
</code></pre></div>`,2),Ys={id:"tointeger",tabindex:"-1"},Zs=n("a",{class:"header-anchor",href:"#tointeger","aria-hidden":"true"},"#",-1),$s=s(),na=s("toInteger"),sa=e(`<p>value \u8F6C\u6574\u6570</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">toInteger</span><span class="token punctuation">(</span><span class="token number">6.2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6</span>
 
<span class="token function">toInteger</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 0</span>
 
<span class="token function">toInteger</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 1.7976931348623157e+308</span>
 
<span class="token function">toInteger</span><span class="token punctuation">(</span><span class="token string">&#39;6.2&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6</span>
</code></pre></div>`,2),aa={id:"tolength",tabindex:"-1"},ta=n("a",{class:"header-anchor",href:"#tolength","aria-hidden":"true"},"#",-1),pa=s(),ea=s("toLength"),oa=e(`<p>\u5C06 value \u8F6C\u6362\u4E3A\u7B26\u5408\u6570\u7EC4 length \u5C5E\u6027\u957F\u5EA6\u7684\u6574\u6570</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">toLength</span><span class="token punctuation">(</span><span class="token number">6.2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6</span>
 
<span class="token function">toLength</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 0</span>
 
<span class="token function">toLength</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 4294967295</span>
 
<span class="token function">toLength</span><span class="token punctuation">(</span><span class="token string">&#39;6.2&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6</span>
</code></pre></div>`,2),ca={id:"tonumber",tabindex:"-1"},la=n("a",{class:"header-anchor",href:"#tonumber","aria-hidden":"true"},"#",-1),ua=s(),ia=s("toNumber"),ra=e(`<p>value \u8F6C\u6570\u5B57</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">toNumber</span><span class="token punctuation">(</span><span class="token number">6.2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6.2</span>
 
<span class="token function">toNumber</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 5e-324</span>
 
<span class="token function">toNumber</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; Infinity</span>
 
<span class="token function">toNumber</span><span class="token punctuation">(</span><span class="token string">&#39;6.2&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 6.2</span>
</code></pre></div>`,2),ka={id:"toarray",tabindex:"-1"},da=n("a",{class:"header-anchor",href:"#toarray","aria-hidden":"true"},"#",-1),ha=s(),_a=s("toArray"),ma=e(`<p>value \u8F6C\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&#39;a&#39;, &#39;b&#39;]</span>

<span class="token function">toArray</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&#39;h&#39;, &#39;i&#39;]</span>

<span class="token function">toArray</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; []</span>

<span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; []</span>
</code></pre></div>`,2),ga={id:"isboolean",tabindex:"-1"},fa=n("a",{class:"header-anchor",href:"#isboolean","aria-hidden":"true"},"#",-1),ba=s(),va=s("isBoolean"),ya=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u5E03\u5C14\u503C</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),xa={id:"isstring",tabindex:"-1"},ja=n("a",{class:"header-anchor",href:"#isstring","aria-hidden":"true"},"#",-1),wa=s(),Na=s("isString"),Ia=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isString</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>
</code></pre></div>`,2),Aa={id:"isnumber",tabindex:"-1"},La=n("a",{class:"header-anchor",href:"#isnumber","aria-hidden":"true"},"#",-1),Oa=s(),Ea=s("isNumber"),Fa=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u6570\u5B57\u7C7B\u578B</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>
</code></pre></div>`,2),Sa={id:"isbigint",tabindex:"-1"},Ma=n("a",{class:"header-anchor",href:"#isbigint","aria-hidden":"true"},"#",-1),Ba=s(),qa=s("isBigInt"),Da=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A BigInt \u7C7B\u578B</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> bigInt <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token string">&quot;9007199254740991&quot;</span><span class="token punctuation">)</span>

<span class="token function">isBigInt</span><span class="token punctuation">(</span>bigInt<span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isBigInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isBigInt</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Wa={id:"issymbol",tabindex:"-1"},Va=n("a",{class:"header-anchor",href:"#issymbol","aria-hidden":"true"},"#",-1),Ca=s(),Pa=s("isSymbol"),Ra=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A Symobl \u7C7B\u578B</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isSymbol</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token function">isSymbol</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// false</span>
</code></pre></div>`,2),Ta={id:"isfunction",tabindex:"-1"},Ua=n("a",{class:"header-anchor",href:"#isfunction","aria-hidden":"true"},"#",-1),Ja=s(),za=s("isFunction"),Ga=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u51FD\u6570</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// false</span>
</code></pre></div>`,2),Xa={id:"isobject",tabindex:"-1"},Ha=n("a",{class:"header-anchor",href:"#isobject","aria-hidden":"true"},"#",-1),Ka=s(),Qa=s("isObject"),Ya=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A Object \u7C7B\u578B\uFF0C\u5982\uFF1A\u6570\u7EC4\u3001\u51FD\u6570\u3001\u5BF9\u8C61\u3001\u6B63\u5219\u8868\u8FBE\u5F0F\u3001<code>new Number(0)</code> \u548C <code>new String(&#39;&#39;)</code></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isObject</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isObject</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isObject</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Za={id:"isobjectlike",tabindex:"-1"},$a=n("a",{class:"header-anchor",href:"#isobjectlike","aria-hidden":"true"},"#",-1),nt=s(),st=s("isObjectLike"),at=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u7C7B\u4F3C\u5BF9\u8C61\u7684\u7ED3\u6784\uFF0C\u5982\u679C\u503C\u4E0D\u4E3A <code>null</code>\uFF0C\u5E76\u4E14 typeof \u7684\u7ED3\u679C\u4E3A <code>&#39;object&#39;</code>\uFF0C\u5219\u8BE5\u503C\u7C7B\u4F3C\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isObjectLike</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isObjectLike</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isObjectLike</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isObjectLike</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),tt={id:"isarray",tabindex:"-1"},pt=n("a",{class:"header-anchor",href:"#isarray","aria-hidden":"true"},"#",-1),et=s(),ot=s("isArray"),ct=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),lt={id:"isarraylike",tabindex:"-1"},ut=n("a",{class:"header-anchor",href:"#isarraylike","aria-hidden":"true"},"#",-1),it=s(),rt=s("isArrayLike"),kt=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u7C7B\u6570\u7EC4\uFF0C\u5982\u679C\u503C\u4E0D\u662F\u51FD\u6570\uFF0C\u5E76\u4E14 value.length \u662F\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E 0 \u4E14\u5C0F\u4E8E\u7B49\u4E8E <code>Number.MAX_SAFE_INTEGER</code> \u7684\u6574\u6570\uFF0C\u5B83\u5C31\u662F\u4E00\u4E2A\u7C7B\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isArrayLike</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArrayLike</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArrayLike</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArrayLike</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),dt={id:"isarraylikeobject",tabindex:"-1"},ht=n("a",{class:"header-anchor",href:"#isarraylikeobject","aria-hidden":"true"},"#",-1),_t=s(),mt=s("isArrayLikeObject"),gt=e(`<p>\u6B64\u65B9\u6CD5\u4E0E isArrayLike \u7C7B\u4F3C\uFF0C\u4E0D\u4E00\u6837\u7684\u5730\u65B9\u662F\u5B83\u8FD8\u4F1A\u68C0\u67E5 value \u662F\u5426\u4E3A\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isArrayLikeObject</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArrayLikeObject</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArrayLikeObject</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isArrayLikeObject</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),ft={id:"isarguments",tabindex:"-1"},bt=n("a",{class:"header-anchor",href:"#isarguments","aria-hidden":"true"},"#",-1),vt=s(),yt=s("isArguments"),xt=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A arguments \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isArguments</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> arguments <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isArguments</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),jt={id:"isarraybuffer",tabindex:"-1"},wt=n("a",{class:"header-anchor",href:"#isarraybuffer","aria-hidden":"true"},"#",-1),Nt=s(),It=s("isArrayBuffer"),At=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A ArrayBuffer \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isArrayBuffer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>
 
<span class="token function">isArrayBuffer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Lt={id:"iserror",tabindex:"-1"},Ot=n("a",{class:"header-anchor",href:"#iserror","aria-hidden":"true"},"#",-1),Et=s(),Ft=s("isError"),St=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A <code>Error</code>\u3001<code>EvalError</code>\u3001<code>RangeError</code>\u3001<code>ReferenceError</code>\u3001<code>SyntaxError</code>\u3001<code>TypeError</code> \u6784\u9020\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isError</span><span class="token punctuation">(</span>Error<span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Mt={id:"isdate",tabindex:"-1"},Bt=n("a",{class:"header-anchor",href:"#isdate","aria-hidden":"true"},"#",-1),qt=s(),Dt=s("isDate"),Wt=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A Date \u65F6\u95F4\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isDate</span><span class="token punctuation">(</span><span class="token string">&#39;Tue Jan 25 2022&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Vt={id:"isregexp",tabindex:"-1"},Ct=n("a",{class:"header-anchor",href:"#isregexp","aria-hidden":"true"},"#",-1),Pt=s(),Rt=s("isRegExp"),Tt=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A RegExp \u6B63\u5219\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token string">&#39;/a/&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Ut={id:"isnan",tabindex:"-1"},Jt=n("a",{class:"header-anchor",href:"#isnan","aria-hidden":"true"},"#",-1),zt=s(),Gt=s("isNaN"),Xt=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A NaN</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Ht={id:"isnil",tabindex:"-1"},Kt=n("a",{class:"header-anchor",href:"#isnil","aria-hidden":"true"},"#",-1),Qt=s(),Yt=s("isNil"),Zt=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A falsy \u503C\uFF0Cfalsy \u503C\u8868\u793A \u4E25\u683C\u7B49\u4E8E <code>null</code> \u6216 <code>undefined</code> \u7684\u503C</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isNil</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isNil</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isNil</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),$t={id:"isfinite",tabindex:"-1"},np=n("a",{class:"header-anchor",href:"#isfinite","aria-hidden":"true"},"#",-1),sp=s(),ap=s("isFinite"),tp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u6709\u9650\u6570\u5B57</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">2e64</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),pp={id:"isinteger",tabindex:"-1"},ep=n("a",{class:"header-anchor",href:"#isinteger","aria-hidden":"true"},"#",-1),op=s(),cp=s("isInteger"),lp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u6574\u6570</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">2.3</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isInteger</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),up={id:"islength",tabindex:"-1"},ip=n("a",{class:"header-anchor",href:"#islength","aria-hidden":"true"},"#",-1),rp=s(),kp=s("isLength"),dp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u6709\u6548\u7684\u6570\u7EC4/\u7C7B\u6570\u7EC4 length \u5C5E\u6027</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isLength</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isLength</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isLength</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),hp={id:"isplainobject",tabindex:"-1"},_p=n("a",{class:"header-anchor",href:"#isplainobject","aria-hidden":"true"},"#",-1),mp=s(),gp=s("isPlainObject"),fp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A\u539F\u59CB\u5BF9\u8C61\uFF0C\u539F\u59CB\u5BF9\u8C61\u5305\u62EC\uFF1A\u7531 Object \u5B9E\u4F8B\u521B\u5EFA\u7684\u5BF9\u8C61\uFF0C\u6216\u8005\u539F\u578B\uFF08<code>[[Prototype]]</code>\uFF09\u6307\u5411\u4E3A null \u7684\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>

<span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isPlainObject</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>
</code></pre></div>`,2),bp={id:"ismap",tabindex:"-1"},vp=n("a",{class:"header-anchor",href:"#ismap","aria-hidden":"true"},"#",-1),yp=s(),xp=s("isMap"),jp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A Map \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),wp={id:"isweakmap",tabindex:"-1"},Np=n("a",{class:"header-anchor",href:"#isweakmap","aria-hidden":"true"},"#",-1),Ip=s(),Ap=s("isWeakMap"),Lp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A WeakMap \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isWeakMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isWeakMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Op={id:"isset",tabindex:"-1"},Ep=n("a",{class:"header-anchor",href:"#isset","aria-hidden":"true"},"#",-1),Fp=s(),Sp=s("isSet"),Mp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A Set \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isSet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isSet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2),Bp={id:"isweakset",tabindex:"-1"},qp=n("a",{class:"header-anchor",href:"#isweakset","aria-hidden":"true"},"#",-1),Dp=s(),Wp=s("isWeakSet"),Vp=e(`<p>\u68C0\u6D4B value \u662F\u5426\u4E3A WeakSet \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isWeakSet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; true</span>

<span class="token function">isWeakSet</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; false</span>
</code></pre></div>`,2);function Cp(Pp,Rp){const t=o("synta"),c=o("ExternalLinkIcon");return u(),i(r,null,[d,h,n("h3",_,[m,g,a(t,{text:"each(array, callback)"},{default:p(()=>[f]),_:1})]),b,n("h3",v,[y,x,a(t,{text:"map(array, callback)"},{default:p(()=>[j]),_:1})]),w,n("h3",N,[I,A,a(t,{text:"cloneDeep(value)"},{default:p(()=>[L]),_:1})]),O,n("h2",E,[F,S,a(t,{text:"values(object)"},{default:p(()=>[M]),_:1})]),B,n("h3",q,[D,W,a(t,{text:"has(value)"},{default:p(()=>[V]),_:1})]),C,n("h3",P,[R,T,a(t,{text:"hasIn(value)"},{default:p(()=>[U]),_:1})]),J,n("h3",z,[G,X,a(t,{text:"pick(objec, keys)"},{default:p(()=>[H]),_:1})]),K,n("h3",Q,[Y,Z,a(t,{text:"pickBy(objec, callback)"},{default:p(()=>[$]),_:1})]),nn,n("h3",sn,[an,tn,a(t,{text:"chunk(array, size=1)"},{default:p(()=>[pn]),_:1})]),en,n("h3",on,[cn,ln,a(t,{text:"compact(array)"},{default:p(()=>[un]),_:1})]),rn,n("h3",kn,[dn,hn,a(t,{text:"flatMap(array, callback)"},{default:p(()=>[_n]),_:1})]),mn,n("h3",gn,[fn,bn,a(t,{text:"flatMapDeep(array, callback)"},{default:p(()=>[vn]),_:1})]),yn,n("h3",xn,[jn,wn,a(t,{text:"flatten(array)"},{default:p(()=>[Nn]),_:1})]),In,n("h3",An,[Ln,On,a(t,{text:"flattenDeep(array)"},{default:p(()=>[En]),_:1})]),Fn,n("h3",Sn,[Mn,Bn,a(t,{text:"uniq(array)"},{default:p(()=>[qn]),_:1})]),Dn,n("h3",Wn,[Vn,Cn,a(t,{text:"find(array, callback, [fromIndex=0])"},{default:p(()=>[Pn]),_:1})]),Rn,n("h3",Tn,[Un,Jn,a(t,{text:"findIndex(array, callback, [fromIndex=0])"},{default:p(()=>[zn]),_:1})]),Gn,n("h3",Xn,[Hn,Kn,a(t,{text:"findLast(array, callback, [fromIndex=array.length-1])"},{default:p(()=>[Qn]),_:1})]),Yn,n("h3",Zn,[$n,ns,a(t,{text:"findLastIndex(array, callback, [fromIndex=array.length-1])"},{default:p(()=>[ss]),_:1})]),as,n("h3",ts,[ps,es,a(t,{text:"indexOf(array, searchElement, [fromIndex=0])"},{default:p(()=>[os]),_:1})]),cs,n("h3",ls,[us,is,a(t,{text:"lastIndexOf(array, searchElement, [fromIndex=array.length-1])"},{default:p(()=>[rs]),_:1})]),ks,n("h3",ds,[hs,_s,a(t,{text:"remain(array, start, [deleteCount=array.length-1])"},{default:p(()=>[ms]),_:1})]),gs,n("h3",fs,[bs,vs,a(t,{text:"tail(array)"},{default:p(()=>[ys]),_:1})]),xs,n("h3",js,[ws,Ns,a(t,{text:"debounce(func, [wait=0], [immediate=false])"},{default:p(()=>[Is]),_:1})]),As,n("h3",Ls,[Os,Es,a(t,{text:"throttle(func, [wait=0], [options={}])"},{default:p(()=>[Fs]),_:1})]),Ss,n("h3",Ms,[Bs,qs,a(t,{text:"delay(func, [wait=0], [...args])"},{default:p(()=>[Ds]),_:1})]),Ws,n("h3",Vs,[Cs,Ps,a(t,{text:"eq(value, other)"},{default:p(()=>[Rs]),_:1})]),n("p",null,[Ts,n("a",Us,[Js,a(c)])]),zs,n("h3",Gs,[Xs,Hs,a(t,{text:"toFinite(value)"},{default:p(()=>[Ks]),_:1})]),Qs,n("h3",Ys,[Zs,$s,a(t,{text:"toInteger(value)"},{default:p(()=>[na]),_:1})]),sa,n("h3",aa,[ta,pa,a(t,{text:"toLength(value)"},{default:p(()=>[ea]),_:1})]),oa,n("h3",ca,[la,ua,a(t,{text:"toNumber(value)"},{default:p(()=>[ia]),_:1})]),ra,n("h3",ka,[da,ha,a(t,{text:"toArray(value)"},{default:p(()=>[_a]),_:1})]),ma,n("h3",ga,[fa,ba,a(t,{text:"isBoolean(value)"},{default:p(()=>[va]),_:1})]),ya,n("h3",xa,[ja,wa,a(t,{text:"isString(value)"},{default:p(()=>[Na]),_:1})]),Ia,n("h3",Aa,[La,Oa,a(t,{text:"isNumber(value)"},{default:p(()=>[Ea]),_:1})]),Fa,n("h3",Sa,[Ma,Ba,a(t,{text:"isBigInt(value)"},{default:p(()=>[qa]),_:1})]),Da,n("h3",Wa,[Va,Ca,a(t,{text:"isSymbol(value)"},{default:p(()=>[Pa]),_:1})]),Ra,n("h3",Ta,[Ua,Ja,a(t,{text:"isFunction(value)"},{default:p(()=>[za]),_:1})]),Ga,n("h3",Xa,[Ha,Ka,a(t,{text:"isObject(value)"},{default:p(()=>[Qa]),_:1})]),Ya,n("h3",Za,[$a,nt,a(t,{text:"isObjectLike(value)"},{default:p(()=>[st]),_:1})]),at,n("h3",tt,[pt,et,a(t,{text:"isArray(value)"},{default:p(()=>[ot]),_:1})]),ct,n("h3",lt,[ut,it,a(t,{text:"isArrayLike(value)"},{default:p(()=>[rt]),_:1})]),kt,n("h3",dt,[ht,_t,a(t,{text:"isArrayLikeObject(value)"},{default:p(()=>[mt]),_:1})]),gt,n("h3",ft,[bt,vt,a(t,{text:"isArguments(value)"},{default:p(()=>[yt]),_:1})]),xt,n("h3",jt,[wt,Nt,a(t,{text:"isArrayBuffer(value)"},{default:p(()=>[It]),_:1})]),At,n("h3",Lt,[Ot,Et,a(t,{text:"isError(value)"},{default:p(()=>[Ft]),_:1})]),St,n("h3",Mt,[Bt,qt,a(t,{text:"isDate(value)"},{default:p(()=>[Dt]),_:1})]),Wt,n("h3",Vt,[Ct,Pt,a(t,{text:"isRegExp(value)"},{default:p(()=>[Rt]),_:1})]),Tt,n("h3",Ut,[Jt,zt,a(t,{text:"isNaN(value)"},{default:p(()=>[Gt]),_:1})]),Xt,n("h3",Ht,[Kt,Qt,a(t,{text:"isNil(value)"},{default:p(()=>[Yt]),_:1})]),Zt,n("h3",$t,[np,sp,a(t,{text:"isFinite(value)"},{default:p(()=>[ap]),_:1})]),tp,n("h3",pp,[ep,op,a(t,{text:"isInteger(value)"},{default:p(()=>[cp]),_:1})]),lp,n("h3",up,[ip,rp,a(t,{text:"isLength(value)"},{default:p(()=>[kp]),_:1})]),dp,n("h3",hp,[_p,mp,a(t,{text:"isPlainObject(value)"},{default:p(()=>[gp]),_:1})]),fp,n("h3",bp,[vp,yp,a(t,{text:"isMap(value)"},{default:p(()=>[xp]),_:1})]),jp,n("h3",wp,[Np,Ip,a(t,{text:"isWeakMap(value)"},{default:p(()=>[Ap]),_:1})]),Lp,n("h3",Op,[Ep,Fp,a(t,{text:"isSet(value)"},{default:p(()=>[Sp]),_:1})]),Mp,n("h3",Bp,[qp,Dp,a(t,{text:"isWeakSet(value)"},{default:p(()=>[Wp]),_:1})]),Vp],64)}var Up=l(k,[["render",Cp]]);export{Up as default};
